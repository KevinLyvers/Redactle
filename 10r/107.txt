https://en.wikipedia.org/wiki/Computer_programming
computer, programming, or, coding, is, the, composition, of, sequences, of, instructions, called, programs, that, computers, can, follow, to, perform, tasks, it, involves, designing, and, implementing, algorithms, step, by, step, specifications, of, procedures, by, writing, code, in, one, or, more, programming, languages, programmers, typically, use, high, level, programming, languages, that, are, more, easily, intelligible, to, humans, than, machine, code, which, is, directly, executed, by, the, central, processing, unit, proficient, programming, usually, requires, expertise, in, several, different, subjects, including, knowledge, of, the, application, domain, details, of, programming, languages, and, generic, code, libraries, specialized, algorithms, and, formal, logic, auxiliary, tasks, accompanying, and, related, to, programming, include, analyzing, requirements, testing, debugging, investigating, and, fixing, problems, implementation, of, build, systems, and, management, of, derived, artifacts, such, as, programs, machine, code, while, these, are, sometimes, considered, programming, often, the, term, software, development, is, used, for, this, larger, overall, process, with, the, terms, programming, implementation, and, coding, reserved, for, the, writing, and, editing, of, code, per, se, sometimes, software, development, is, known, as, software, engineering, especially, when, it, employs, formal, methods, or, follows, an, engineering, design, process, programmable, devices, have, existed, for, centuries, as, early, as, the, 9th, century, a, programmable, music, sequencer, was, invented, by, the, persian, banu, musa, brothers, who, described, an, automated, mechanical, flute, player, in, the, book, of, ingenious, devices, in, 1206, the, arab, engineer, al, jazari, invented, a, programmable, drum, machine, where, a, musical, mechanical, automaton, could, be, made, to, play, different, rhythms, and, drum, patterns, via, pegs, and, cams, in, 1801, the, jacquard, loom, could, produce, entirely, different, weaves, by, changing, the, program, a, series, of, pasteboard, cards, with, holes, punched, in, them, code, breaking, algorithms, have, also, existed, for, centuries, in, the, 9th, century, the, arab, mathematician, al, kindi, described, a, cryptographic, algorithm, for, deciphering, encrypted, code, in, a, manuscript, on, deciphering, cryptographic, messages, he, gave, the, first, description, of, cryptanalysis, by, frequency, analysis, the, earliest, code, breaking, algorithm, the, first, computer, program, is, generally, dated, to, 1843, when, mathematician, ada, lovelace, published, an, algorithm, to, calculate, a, sequence, of, bernoulli, numbers, intended, to, be, carried, out, by, charles, babbage, s, analytical, engine, however, charles, babbage, himself, wrote, his, first, program, for, the, ae, in, 1837, in, the, 1880s, herman, hollerith, invented, the, concept, of, storing, data, in, machine, readable, form, later, a, control, panel, plug, board, added, to, his, 1906, type, i, tabulator, allowed, it, to, be, programmed, for, different, jobs, and, by, the, late, 1940s, unit, record, equipment, such, as, the, ibm, 602, and, ibm, 604, were, programmed, by, control, panels, in, a, similar, way, as, were, the, first, electronic, computers, however, with, the, concept, of, the, stored, program, computer, introduced, in, 1949, both, programs, and, data, were, stored, and, manipulated, in, the, same, way, in, computer, memory, machine, code, was, the, language, of, early, programs, written, in, the, instruction, set, of, the, particular, machine, often, in, binary, notation, assembly, languages, were, soon, developed, that, let, the, programmer, specify, instructions, in, a, text, format, e, g, add, x, total, with, abbreviations, for, each, operation, code, and, meaningful, names, for, specifying, addresses, however, because, an, assembly, language, is, little, more, than, a, different, notation, for, a, machine, language, two, machines, with, different, instruction, sets, also, have, different, assembly, languages, high, level, languages, made, the, process, of, developing, a, program, simpler, and, more, understandable, and, less, bound, to, the, underlying, hardware, the, first, compiler, related, tool, the, a, 0, system, was, developed, in, 1952, by, grace, hopper, who, also, coined, the, term, compiler, fortran, the, first, widely, used, high, level, language, to, have, a, functional, implementation, came, out, in, 1957, and, many, other, languages, were, soon, developed, in, particular, cobol, aimed, at, commercial, data, processing, and, lisp, for, computer, research, these, compiled, languages, allow, the, programmer, to, write, programs, in, terms, that, are, syntactically, richer, and, more, capable, of, abstracting, the, code, making, it, easy, to, target, varying, machine, instruction, sets, via, compilation, declarations, and, heuristics, compilers, harnessed, the, power, of, computers, to, make, programming, easier, by, allowing, programmers, to, specify, calculations, by, entering, a, formula, using, infix, notation, programs, were, mostly, entered, using, punched, cards, or, paper, tape, by, the, late, 1960s, data, storage, devices, and, computer, terminals, became, inexpensive, enough, that, programs, could, be, created, by, typing, directly, into, the, computers, text, editors, were, also, developed, that, allowed, changes, and, corrections, to, be, made, much, more, easily, than, with, punched, cards, whatever, the, approach, to, development, may, be, the, final, program, must, satisfy, some, fundamental, properties, the, following, properties, are, among, the, most, important, using, automated, tests, and, fitness, functions, can, help, to, maintain, some, of, the, aforementioned, attributes, in, computer, programming, readability, refers, to, the, ease, with, which, a, human, reader, can, comprehend, the, purpose, control, flow, and, operation, of, source, code, it, affects, the, aspects, of, quality, above, including, portability, usability, and, most, importantly, maintainability, readability, is, important, because, programmers, spend, the, majority, of, their, time, reading, trying, to, understand, reusing, and, modifying, existing, source, code, rather, than, writing, new, source, code, unreadable, code, often, leads, to, bugs, inefficiencies, and, duplicated, code, a, study, found, that, a, few, simple, readability, transformations, made, code, shorter, and, drastically, reduced, the, time, to, understand, it, following, a, consistent, programming, style, often, helps, readability, however, readability, is, more, than, just, programming, style, many, factors, having, little, or, nothing, to, do, with, the, ability, of, the, computer, to, efficiently, compile, and, execute, the, code, contribute, to, readability, some, of, these, factors, include, the, presentation, aspects, of, this, such, as, indents, line, breaks, color, highlighting, and, so, on, are, often, handled, by, the, source, code, editor, but, the, content, aspects, reflect, the, programmer, s, talent, and, skills, various, visual, programming, languages, have, also, been, developed, with, the, intent, to, resolve, readability, concerns, by, adopting, non, traditional, approaches, to, code, structure, and, display, integrated, development, environments, ides, aim, to, integrate, all, such, help, techniques, like, code, refactoring, can, enhance, readability, the, academic, field, and, the, engineering, practice, of, computer, programming, are, concerned, with, discovering, and, implementing, the, most, efficient, algorithms, for, a, given, class, of, problems, for, this, purpose, algorithms, are, classified, into, orders, using, big, o, notation, which, expresses, resource, use, such, as, execution, time, or, memory, consumption, in, terms, of, the, size, of, an, input, expert, programmers, are, familiar, with, a, variety, of, well, established, algorithms, and, their, respective, complexities, and, use, this, knowledge, to, choose, algorithms, that, are, best, suited, to, the, circumstances, the, first, step, in, most, formal, software, development, processes, is, requirements, analysis, followed, by, testing, to, determine, value, modeling, implementation, and, failure, elimination, debugging, there, exist, a, lot, of, different, approaches, for, each, of, those, tasks, one, approach, popular, for, requirements, analysis, is, use, case, analysis, many, programmers, use, forms, of, agile, software, development, where, the, various, stages, of, formal, software, development, are, more, integrated, together, into, short, cycles, that, take, a, few, weeks, rather, than, years, there, are, many, approaches, to, the, software, development, process, popular, modeling, techniques, include, object, oriented, analysis, and, design, ooad, and, model, driven, architecture, mda, the, unified, modeling, language, uml, is, a, notation, used, for, both, the, ooad, and, mda, a, similar, technique, used, for, database, design, is, entity, relationship, modeling, er, modeling, implementation, techniques, include, imperative, languages, object, oriented, or, procedural, functional, languages, and, logic, programming, languages, it, is, very, difficult, to, determine, what, are, the, most, popular, modern, programming, languages, methods, of, measuring, programming, language, popularity, include, counting, the, number, of, job, advertisements, that, mention, the, language, the, number, of, books, sold, and, courses, teaching, the, language, this, overestimates, the, importance, of, newer, languages, and, estimates, of, the, number, of, existing, lines, of, code, written, in, the, language, this, underestimates, the, number, of, users, of, business, languages, such, as, cobol, some, languages, are, very, popular, for, particular, kinds, of, applications, while, some, languages, are, regularly, used, to, write, many, different, kinds, of, applications, for, example, cobol, is, still, strong, in, corporate, data, centers, often, on, large, mainframe, computers, fortran, in, engineering, applications, scripting, languages, in, web, development, and, c, in, embedded, software, many, applications, use, a, mix, of, several, languages, in, their, construction, and, use, new, languages, are, generally, designed, around, the, syntax, of, a, prior, language, with, new, functionality, added, for, example, c, adds, object, orientation, to, c, and, java, adds, memory, management, and, bytecode, to, c, but, as, a, result, loses, efficiency, and, the, ability, for, low, level, manipulation, debugging, is, a, very, important, task, in, the, software, development, process, since, having, defects, in, a, program, can, have, significant, consequences, for, its, users, some, languages, are, more, prone, to, some, kinds, of, faults, because, their, specification, does, not, require, compilers, to, perform, as, much, checking, as, other, languages, use, of, a, static, code, analysis, tool, can, help, detect, some, possible, problems, normally, the, first, step, in, debugging, is, to, attempt, to, reproduce, the, problem, this, can, be, a, non, trivial, task, for, example, as, with, parallel, processes, or, some, unusual, software, bugs, also, specific, user, environment, and, usage, history, can, make, it, difficult, to, reproduce, the, problem, after, the, bug, is, reproduced, the, input, of, the, program, may, need, to, be, simplified, to, make, it, easier, to, debug, for, example, when, a, bug, in, a, compiler, can, make, it, crash, when, parsing, some, large, source, file, a, simplification, of, the, test, case, that, results, in, only, few, lines, from, the, original, source, file, can, be, sufficient, to, reproduce, the, same, crash, trial, and, error, divide, and, conquer, is, needed, the, programmer, will, try, to, remove, some, parts, of, the, original, test, case, and, check, if, the, problem, still, exists, when, debugging, the, problem, in, a, gui, the, programmer, can, try, to, skip, some, user, interaction, from, the, original, problem, description, and, check, if, the, remaining, actions, are, sufficient, for, bugs, to, appear, scripting, and, breakpointing, are, also, part, of, this, process, debugging, is, often, done, with, ides, standalone, debuggers, like, gdb, are, also, used, and, these, often, provide, less, of, a, visual, environment, usually, using, a, command, line, some, text, editors, such, as, emacs, allow, gdb, to, be, invoked, through, them, to, provide, a, visual, environment, different, programming, languages, support, different, styles, of, programming, called, programming, paradigms, the, choice, of, language, used, is, subject, to, many, considerations, such, as, company, policy, suitability, to, task, availability, of, third, party, packages, or, individual, preference, ideally, the, programming, language, best, suited, for, the, task, at, hand, will, be, selected, trade, offs, from, this, ideal, involve, finding, enough, programmers, who, know, the, language, to, build, a, team, the, availability, of, compilers, for, that, language, and, the, efficiency, with, which, programs, written, in, a, given, language, execute, languages, form, an, approximate, spectrum, from, low, level, to, high, level, low, level, languages, are, typically, more, machine, oriented, and, faster, to, execute, whereas, high, level, languages, are, more, abstract, and, easier, to, use, but, execute, less, quickly, it, is, usually, easier, to, code, in, high, level, languages, than, in, low, level, ones, programming, languages, are, essential, for, software, development, they, are, the, building, blocks, for, all, software, from, the, simplest, applications, to, the, most, sophisticated, ones, allen, downey, in, his, book, how, to, think, like, a, computer, scientist, writes, many, computer, languages, provide, a, mechanism, to, call, functions, provided, by, shared, libraries, provided, the, functions, in, a, library, follow, the, appropriate, run, time, conventions, e, g, method, of, passing, arguments, then, these, functions, may, be, written, in, any, other, language, computer, programmers, are, those, who, write, computer, software, their, jobs, usually, involve, although, programming, has, been, presented, in, the, media, as, a, somewhat, mathematical, subject, some, research, shows, that, good, programmers, have, strong, skills, in, natural, human, languages, and, that, learning, to, code, is, similar, to, learning, a, foreign, language