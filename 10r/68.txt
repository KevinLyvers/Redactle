https://en.wikipedia.org/wiki/Operating_system
an, operating, system, os, is, system, software, that, manages, computer, hardware, and, software, resources, and, provides, common, services, for, computer, programs, time, sharing, operating, systems, schedule, tasks, for, efficient, use, of, the, system, and, may, also, include, accounting, software, for, cost, allocation, of, processor, time, mass, storage, peripherals, and, other, resources, for, hardware, functions, such, as, input, and, output, and, memory, allocation, the, operating, system, acts, as, an, intermediary, between, programs, and, the, computer, hardware, although, the, application, code, is, usually, executed, directly, by, the, hardware, and, frequently, makes, system, calls, to, an, os, function, or, is, interrupted, by, it, operating, systems, are, found, on, many, devices, that, contain, a, computer, from, cellular, phones, and, video, game, consoles, to, web, servers, and, supercomputers, in, the, personal, computer, market, as, of, september, 2023, microsoft, windows, holds, a, dominant, market, share, of, around, 68, macos, by, apple, inc, is, in, second, place, 20, and, the, varieties, of, linux, including, chromeos, are, collectively, in, third, place, 7, in, the, mobile, sector, including, smartphones, and, tablets, as, of, september, 2023, android, s, share, is, 68, 92, followed, by, apple, s, ios, and, ipados, with, 30, 42, and, other, operating, systems, with, 66, linux, distributions, are, dominant, in, the, server, and, supercomputing, sectors, other, specialized, classes, of, operating, systems, special, purpose, operating, systems, such, as, embedded, and, real, time, systems, exist, for, many, applications, security, focused, operating, systems, also, exist, some, operating, systems, have, low, system, requirements, e, g, light, weight, linux, distribution, others, may, have, higher, system, requirements, some, operating, systems, require, installation, or, may, come, pre, installed, with, purchased, computers, oem, installation, whereas, others, may, run, directly, from, media, i, e, live, cd, or, flash, memory, i, e, usb, stick, an, operating, system, is, difficult, to, define, but, has, been, called, the, layer, of, software, that, manages, a, computer, s, resources, for, its, users, and, their, applications, operating, systems, include, the, software, that, is, always, running, called, a, kernel, but, can, include, other, software, as, well, the, two, other, types, of, programs, that, can, run, on, a, computer, are, system, programs, which, are, associated, with, the, operating, system, but, may, not, be, part, of, the, kernel, and, applications, all, other, software, there, are, three, main, purposes, that, an, operating, system, fulfills, with, multiprocessors, multiple, cpus, share, memory, a, multicomputer, or, cluster, computer, has, multiple, cpus, each, of, which, has, its, own, memory, multicomputers, were, developed, because, large, multiprocessors, are, difficult, to, engineer, and, prohibitively, expensive, they, are, universal, in, cloud, computing, because, of, the, size, of, the, machine, needed, the, different, cpus, often, need, to, send, and, receive, messages, to, each, other, to, ensure, good, performance, the, operating, systems, for, these, machines, need, to, minimize, this, copying, of, packets, newer, systems, are, often, multiqueue, separating, groups, of, users, into, separate, queues, to, reduce, the, need, for, packet, copying, and, support, more, concurrent, users, another, technique, is, remote, direct, memory, access, which, enables, each, cpu, to, access, memory, belonging, to, other, cpus, multicomputer, operating, systems, often, support, remote, procedure, calls, where, a, cpu, can, call, a, procedure, on, another, cpu, or, distributed, shared, memory, in, which, the, operating, system, uses, virtualization, to, generate, shared, memory, that, does, not, actually, exist, a, distributed, system, is, a, group, of, distinct, networked, computers, each, of, which, might, have, their, own, operating, system, and, file, system, unlike, multicomputers, they, may, be, dispersed, anywhere, in, the, world, middleware, an, additional, software, layer, between, the, operating, system, and, applications, is, often, used, to, improve, consistency, although, it, functions, similarly, to, an, operating, system, it, is, not, a, true, operating, system, embedded, operating, systems, are, designed, to, be, used, in, embedded, computer, systems, whether, they, are, internet, of, things, objects, or, not, connected, to, a, network, embedded, systems, include, many, household, appliances, the, distinguishing, factor, is, that, they, do, not, load, user, installed, software, consequently, they, do, not, need, protection, between, different, applications, enabling, simpler, designs, very, small, operating, systems, might, run, in, less, than, 10, kilobytes, and, the, smallest, are, for, smart, cards, examples, include, embedded, linux, qnx, vxworks, and, the, extra, small, systems, riot, and, tinyos, a, real, time, operating, system, is, an, operating, system, that, guarantees, to, process, events, or, data, by, or, at, a, specific, moment, in, time, hard, real, time, systems, require, exact, timing, and, are, common, in, manufacturing, avionics, military, and, other, similar, uses, with, soft, real, time, systems, the, occasional, missed, event, is, acceptable, this, category, often, includes, audio, or, multimedia, systems, as, well, as, smartphones, in, order, for, hard, real, time, systems, be, sufficiently, exact, in, their, timing, often, they, are, just, a, library, with, no, protection, between, applications, such, as, ecos, a, virtual, machine, is, an, operating, system, that, runs, as, an, application, on, top, of, another, operating, system, the, virtual, machine, is, unaware, that, it, is, an, application, and, operates, as, if, it, had, its, own, hardware, virtual, machines, can, be, paused, saved, and, resumed, making, them, useful, for, operating, systems, research, development, and, debugging, they, also, enhance, portability, by, enabling, applications, to, be, run, on, a, computer, even, if, they, are, not, compatible, with, the, base, operating, system, a, library, operating, system, libos, is, one, in, which, the, services, that, a, typical, operating, system, provides, such, as, networking, are, provided, in, the, form, of, libraries, and, composed, with, a, single, application, and, configuration, code, to, construct, a, unikernel, a, specialized, only, the, absolute, necessary, pieces, of, code, are, extracted, from, libraries, and, bound, together, single, address, space, machine, image, that, can, be, deployed, to, cloud, or, embedded, environments, the, operating, system, code, and, application, code, are, not, executed, in, separated, protection, domains, there, is, only, a, single, application, running, at, least, conceptually, so, there, is, no, need, to, prevent, interference, between, applications, and, os, services, are, accessed, via, simple, library, calls, potentially, inlining, them, based, on, compiler, thresholds, without, the, usual, overhead, of, context, switches, in, a, way, similarly, to, embedded, and, real, time, oses, note, that, this, overhead, is, not, negligible, to, the, direct, cost, of, mode, switching, it, s, necessary, to, add, the, indirect, pollution, of, important, processor, structures, like, cpu, caches, the, instruction, pipeline, and, so, on, which, affects, both, user, mode, and, kernel, mode, performance, the, first, computers, in, the, late, 1940s, and, 1950s, were, directly, programmed, either, with, plugboards, or, with, machine, code, inputted, on, media, such, as, punch, cards, without, programming, languages, or, operating, systems, after, the, introduction, of, the, transistor, in, the, mid, 1950s, mainframes, began, to, be, built, these, still, needed, professional, operators, who, manually, do, what, a, modern, operating, system, would, do, such, as, scheduling, programs, to, run, but, mainframes, still, had, rudimentary, operating, systems, such, as, fortran, monitor, system, fms, and, ibsys, in, the, 1960s, ibm, introduced, the, first, series, of, intercompatible, computers, system, 360, all, of, them, ran, the, same, operating, system, os, 360, which, consisted, of, millions, of, lines, of, assembly, language, that, had, thousands, of, bugs, the, os, 360, also, was, the, first, popular, operating, system, to, support, multiprogramming, such, that, the, cpu, could, be, put, to, use, on, one, job, while, another, was, waiting, on, input, output, i, o, holding, multiple, jobs, in, memory, necessitated, memory, partitioning, and, safeguards, against, one, job, accessing, the, memory, allocated, to, a, different, one, around, the, same, time, teleprinters, began, to, be, used, as, terminals, so, multiple, users, could, access, the, computer, simultaneously, the, operating, system, multics, was, intended, to, allow, hundreds, of, users, to, access, a, large, computer, despite, its, limited, adoption, it, can, be, considered, the, precursor, to, cloud, computing, the, unix, operating, system, originated, as, a, development, of, multics, for, a, single, user, because, unix, s, source, code, was, available, it, became, the, basis, of, other, incompatible, operating, systems, of, which, the, most, successful, were, at, t, s, system, v, and, the, university, of, california, s, berkeley, software, distribution, bsd, to, increase, compatibility, the, ieee, released, the, posix, standard, for, operating, system, application, programming, interfaces, apis, which, is, supported, by, most, unix, systems, minix, was, a, stripped, down, version, of, unix, developed, in, 1987, for, educational, uses, that, inspired, the, commercially, available, free, software, linux, since, 2008, minix, is, used, in, controllers, of, most, intel, microchips, while, linux, is, widespread, in, data, centers, and, android, smartphones, the, invention, of, large, scale, integration, enabled, the, production, of, personal, computers, initially, called, microcomputers, from, around, 1980, for, around, five, years, the, cp, m, control, program, for, microcomputers, was, the, most, popular, operating, system, for, microcomputers, later, ibm, bought, the, dos, disk, operating, system, from, microsoft, after, modifications, requested, by, ibm, the, resulting, system, was, called, ms, dos, microsoft, disk, operating, system, and, was, widely, used, on, ibm, microcomputers, later, versions, increased, their, sophistication, in, part, by, borrowing, features, from, unix, steve, jobs, macintosh, which, after, 1999, used, the, unix, based, via, freebsd, macos, was, the, first, popular, computer, to, use, a, graphical, user, interface, gui, the, gui, proved, much, more, user, friendly, than, the, text, only, command, line, interface, earlier, operating, systems, had, used, following, the, success, of, macintosh, ms, dos, was, updated, with, a, gui, overlay, called, windows, windows, later, was, rewritten, as, a, stand, alone, operating, system, borrowing, so, many, features, from, another, vax, vms, that, a, large, legal, settlement, was, paid, in, the, twenty, first, century, windows, continues, to, be, popular, on, personal, computers, but, has, less, market, share, of, servers, unix, operating, systems, especially, linux, are, the, most, popular, on, enterprise, systems, and, servers, but, are, also, used, on, mobile, devices, and, many, other, computer, systems, on, mobile, devices, symbian, os, was, dominant, at, first, being, usurped, by, blackberry, os, introduced, 2002, and, ios, for, iphones, from, 2007, later, on, the, open, source, unix, based, android, introduced, 2008, became, most, popular, the, components, of, an, operating, system, are, designed, to, ensure, that, various, parts, of, a, computer, function, cohesively, all, user, software, must, interact, with, the, operating, system, to, access, hardware, the, kernel, is, the, part, of, the, operating, system, that, provides, protection, between, different, applications, and, users, this, protection, is, key, to, improving, reliability, by, keeping, errors, isolated, to, one, program, as, well, as, security, by, limiting, the, power, of, malicious, software, and, protecting, private, data, and, ensuring, that, one, program, cannot, monopolize, the, computer, s, resources, most, operating, systems, have, two, modes, of, operation, in, user, mode, the, hardware, checks, that, the, software, is, only, executing, legal, instructions, whereas, the, kernel, has, unrestricted, powers, and, is, not, subject, to, these, checks, the, kernel, also, manages, memory, for, other, processes, and, controls, access, to, input, output, devices, the, operating, system, provides, an, interface, between, an, application, program, and, the, computer, hardware, so, that, an, application, program, can, interact, with, the, hardware, only, by, obeying, rules, and, procedures, programmed, into, the, operating, system, the, operating, system, is, also, a, set, of, services, which, simplify, development, and, execution, of, application, programs, executing, an, application, program, typically, involves, the, creation, of, a, process, by, the, operating, system, kernel, which, assigns, memory, space, and, other, resources, establishes, a, priority, for, the, process, in, multi, tasking, systems, loads, program, binary, code, into, memory, and, initiates, execution, of, the, application, program, which, then, interacts, with, the, user, and, with, hardware, devices, however, in, some, systems, an, application, can, request, that, the, operating, system, execute, another, application, within, the, same, process, either, as, a, subroutine, or, in, a, separate, thread, e, g, the, link, and, attach, facilities, of, os, 360, and, successors, an, interrupt, also, known, as, an, abort, exception, fault, signal, or, trap, provides, an, efficient, way, for, most, operating, systems, to, react, to, the, environment, interrupts, cause, the, central, processing, unit, cpu, to, have, a, control, flow, change, away, from, the, currently, running, program, to, an, interrupt, handler, also, known, as, an, interrupt, service, routine, isr, an, interrupt, service, routine, may, cause, the, central, processing, unit, cpu, to, have, a, context, switch, the, details, of, how, a, computer, processes, an, interrupt, vary, from, architecture, to, architecture, and, the, details, of, how, interrupt, service, routines, behave, vary, from, operating, system, to, operating, system, however, several, interrupt, functions, are, common, the, architecture, and, operating, system, must, a, software, interrupt, is, a, message, to, a, process, that, an, event, has, occurred, this, contrasts, with, a, hardware, interrupt, which, is, a, message, to, the, central, processing, unit, cpu, that, an, event, has, occurred, software, interrupts, are, similar, to, hardware, interrupts, there, is, a, change, away, from, the, currently, running, process, similarly, both, hardware, and, software, interrupts, execute, an, interrupt, service, routine, software, interrupts, may, be, normally, occurring, events, it, is, expected, that, a, time, slice, will, occur, so, the, kernel, will, have, to, perform, a, context, switch, a, computer, program, may, set, a, timer, to, go, off, after, a, few, seconds, in, case, too, much, data, causes, an, algorithm, to, take, too, long, software, interrupts, may, be, error, conditions, such, as, a, malformed, machine, instruction, however, the, most, common, error, conditions, are, division, by, zero, and, accessing, an, invalid, memory, address, users, can, send, messages, to, the, kernel, to, modify, the, behavior, of, a, currently, running, process, for, example, in, the, command, line, environment, pressing, the, interrupt, character, usually, control, c, might, terminate, the, currently, running, process, to, generate, software, interrupts, for, x86, cpus, the, int, assembly, language, instruction, is, available, the, syntax, is, int, x, where, x, is, the, offset, number, in, hexadecimal, format, to, the, interrupt, vector, table, to, generate, software, interrupts, in, unix, like, operating, systems, the, kill, pid, signum, system, call, will, send, a, signal, to, another, process, pid, is, the, process, identifier, of, the, receiving, process, signum, is, the, signal, number, in, mnemonic, format, to, be, sent, the, abrasive, name, of, kill, was, chosen, because, early, implementations, only, terminated, the, process, in, unix, like, operating, systems, signals, inform, processes, of, the, occurrence, of, asynchronous, events, to, communicate, asynchronously, interrupts, are, required, one, reason, a, process, needs, to, asynchronously, communicate, to, another, process, solves, a, variation, of, the, classic, reader, writer, problem, the, writer, receives, a, pipe, from, the, shell, for, its, output, to, be, sent, to, the, reader, s, input, stream, the, command, line, syntax, is, alpha, bravo, alpha, will, write, to, the, pipe, when, its, computation, is, ready, and, then, sleep, in, the, wait, queue, bravo, will, then, be, moved, to, the, ready, queue, and, soon, will, read, from, its, input, stream, the, kernel, will, generate, software, interrupts, to, coordinate, the, piping, signals, may, be, classified, into, 7, categories, the, categories, are, input, output, i, o, devices, are, slower, than, the, cpu, therefore, it, would, slow, down, the, computer, if, the, cpu, had, to, wait, for, each, i, o, to, finish, instead, a, computer, may, implement, interrupts, for, i, o, completion, avoiding, the, need, for, polling, or, busy, waiting, some, computers, require, an, interrupt, for, each, character, or, word, costing, a, significant, amount, of, cpu, time, direct, memory, access, dma, is, an, architecture, feature, to, allow, devices, to, bypass, the, cpu, and, access, main, memory, directly, separate, from, the, architecture, a, device, may, perform, direct, memory, access, to, and, from, main, memory, either, directly, or, via, a, bus, when, a, computer, user, types, a, key, on, the, keyboard, typically, the, character, appears, immediately, on, the, screen, likewise, when, a, user, moves, a, mouse, the, cursor, immediately, moves, across, the, screen, each, keystroke, and, mouse, movement, generates, an, interrupt, called, interrupt, driven, i, o, an, interrupt, driven, i, o, occurs, when, a, process, causes, an, interrupt, for, every, character, or, word, transmitted, devices, such, as, hard, disk, drives, solid, state, drives, and, magnetic, tape, drives, can, transfer, data, at, a, rate, high, enough, that, interrupting, the, cpu, for, every, byte, or, word, transferred, and, having, the, cpu, transfer, the, byte, or, word, between, the, device, and, memory, would, require, too, much, cpu, time, data, is, instead, transferred, between, the, device, and, memory, independently, of, the, cpu, by, hardware, such, as, a, channel, or, a, direct, memory, access, controller, an, interrupt, is, delivered, only, when, all, the, data, is, transferred, if, a, computer, program, executes, a, system, call, to, perform, a, block, i, o, write, operation, then, the, system, call, might, execute, the, following, instructions, while, the, writing, takes, place, the, operating, system, will, context, switch, to, other, processes, as, normal, when, the, device, finishes, writing, the, device, will, interrupt, the, currently, running, process, by, asserting, an, interrupt, request, the, device, will, also, place, an, integer, onto, the, data, bus, upon, accepting, the, interrupt, request, the, operating, system, will, when, the, writing, process, has, its, time, slice, expired, the, operating, system, will, with, the, program, counter, now, reset, the, interrupted, process, will, resume, its, time, slice, among, other, things, a, multiprogramming, operating, system, kernel, must, be, responsible, for, managing, all, system, memory, which, is, currently, in, use, by, the, programs, this, ensures, that, a, program, does, not, interfere, with, memory, already, in, use, by, another, program, since, programs, time, share, each, program, must, have, independent, access, to, memory, cooperative, memory, management, used, by, many, early, operating, systems, assumes, that, all, programs, make, voluntary, use, of, the, kernel, s, memory, manager, and, do, not, exceed, their, allocated, memory, this, system, of, memory, management, is, almost, never, seen, any, more, since, programs, often, contain, bugs, which, can, cause, them, to, exceed, their, allocated, memory, if, a, program, fails, it, may, cause, memory, used, by, one, or, more, other, programs, to, be, affected, or, overwritten, malicious, programs, or, viruses, may, purposefully, alter, another, program, s, memory, or, may, affect, the, operation, of, the, operating, system, itself, with, cooperative, memory, management, it, takes, only, one, misbehaved, program, to, crash, the, system, memory, protection, enables, the, kernel, to, limit, a, process, access, to, the, computer, s, memory, various, methods, of, memory, protection, exist, including, memory, segmentation, and, paging, all, methods, require, some, level, of, hardware, support, such, as, the, 80286, mmu, which, does, not, exist, in, all, computers, in, both, segmentation, and, paging, certain, protected, mode, registers, specify, to, the, cpu, what, memory, address, it, should, allow, a, running, program, to, access, attempts, to, access, other, addresses, trigger, an, interrupt, which, causes, the, cpu, to, re, enter, supervisor, mode, placing, the, kernel, in, charge, this, is, called, a, segmentation, violation, or, seg, v, for, short, and, since, it, is, both, difficult, to, assign, a, meaningful, result, to, such, an, operation, and, because, it, is, usually, a, sign, of, a, misbehaving, program, the, kernel, generally, resorts, to, terminating, the, offending, program, and, reports, the, error, windows, versions, 3, 1, through, me, had, some, level, of, memory, protection, but, programs, could, easily, circumvent, the, need, to, use, it, a, general, protection, fault, would, be, produced, indicating, a, segmentation, violation, had, occurred, however, the, system, would, often, crash, anyway, the, use, of, virtual, memory, addressing, such, as, paging, or, segmentation, means, that, the, kernel, can, choose, what, memory, each, program, may, use, at, any, given, time, allowing, the, operating, system, to, use, the, same, memory, locations, for, multiple, tasks, if, a, program, tries, to, access, memory, that, is, not, accessible, memory, but, nonetheless, has, been, allocated, to, it, the, kernel, is, interrupted, see, memory, management, this, kind, of, interrupt, is, typically, a, page, fault, when, the, kernel, detects, a, page, fault, it, generally, adjusts, the, virtual, memory, range, of, the, program, which, triggered, it, granting, it, access, to, the, memory, requested, this, gives, the, kernel, discretionary, power, over, where, a, particular, application, s, memory, is, stored, or, even, whether, or, not, it, has, actually, been, allocated, yet, in, modern, operating, systems, memory, which, is, accessed, less, frequently, can, be, temporarily, stored, on, a, disk, or, other, media, to, make, that, space, available, for, use, by, other, programs, this, is, called, swapping, as, an, area, of, memory, can, be, used, by, multiple, programs, and, what, that, memory, area, contains, can, be, swapped, or, exchanged, on, demand, virtual, memory, provides, the, programmer, or, the, user, with, the, perception, that, there, is, a, much, larger, amount, of, ram, in, the, computer, than, is, really, there, concurrency, refers, to, the, operating, system, s, ability, to, carry, out, multiple, tasks, simultaneously, virtually, all, modern, operating, systems, support, concurrency, threads, enable, splitting, a, process, work, into, multiple, parts, that, can, run, simultaneously, the, number, of, threads, is, not, limited, by, the, number, of, processors, available, if, there, are, more, threads, than, processors, the, operating, system, kernel, schedules, suspends, and, resumes, threads, controlling, when, each, thread, runs, and, how, much, cpu, time, it, receives, during, a, context, switch, a, running, thread, is, suspended, its, state, is, saved, into, the, thread, control, block, and, stack, and, the, state, of, the, new, thread, is, loaded, in, historically, on, many, systems, a, thread, could, run, until, it, relinquished, control, cooperative, multitasking, because, this, model, can, allow, a, single, thread, to, monopolize, the, processor, most, operating, systems, now, can, interrupt, a, thread, preemptive, multitasking, threads, have, their, own, thread, id, program, counter, pc, a, register, set, and, a, stack, but, share, code, heap, data, and, other, resources, with, other, threads, of, the, same, process, thus, there, is, less, overhead, to, create, a, thread, than, a, new, process, on, single, cpu, systems, concurrency, is, switching, between, processes, many, computers, have, multiple, cpus, parallelism, with, multiple, threads, running, on, different, cpus, can, speed, up, a, program, depending, on, how, much, of, it, can, be, executed, concurrently, permanent, storage, devices, used, in, twenty, first, century, computers, unlike, volatile, dynamic, random, access, memory, dram, are, still, accessible, after, a, crash, or, power, failure, permanent, non, volatile, storage, is, much, cheaper, per, byte, but, takes, several, orders, of, magnitude, longer, to, access, read, and, write, the, two, main, technologies, are, a, hard, drive, consisting, of, magnetic, disks, and, flash, memory, a, solid, state, drive, that, stores, data, in, electrical, circuits, the, latter, is, more, expensive, but, faster, and, more, durable, file, systems, are, an, abstraction, used, by, the, operating, system, to, simplify, access, to, permanent, storage, they, provide, human, readable, filenames, and, other, metadata, increase, performance, via, amortization, of, accesses, prevent, multiple, threads, from, accessing, the, same, section, of, memory, and, include, checksums, to, identify, corruption, file, systems, are, composed, of, files, named, collections, of, data, of, an, arbitrary, size, and, directories, also, called, folders, that, list, human, readable, filenames, and, other, directories, an, absolute, file, path, begins, at, the, root, directory, and, lists, subdirectories, divided, by, punctuation, while, a, relative, path, defines, the, location, of, a, file, from, a, directory, system, calls, which, are, sometimes, wrapped, by, libraries, enable, applications, to, create, delete, open, and, close, files, as, well, as, link, read, and, write, to, them, all, these, operations, are, carried, out, by, the, operating, system, on, behalf, of, the, application, the, operating, system, s, efforts, to, reduce, latency, include, storing, recently, requested, blocks, of, memory, in, a, cache, and, prefetching, data, that, the, application, has, not, asked, for, but, might, need, next, device, drivers, are, software, specific, to, each, input, output, i, o, device, that, enables, the, operating, system, to, work, without, modification, over, different, hardware, another, component, of, file, systems, is, a, dictionary, that, maps, a, file, s, name, and, metadata, to, the, data, block, where, its, contents, are, stored, most, file, systems, use, directories, to, convert, file, names, to, file, numbers, to, find, the, block, number, the, operating, system, uses, an, index, often, implemented, as, a, tree, separately, there, is, a, free, space, map, to, track, free, blocks, commonly, implemented, as, a, bitmap, although, any, free, block, can, be, used, to, store, a, new, file, many, operating, systems, try, to, group, together, files, in, the, same, directory, to, maximize, performance, or, periodically, reorganize, files, to, reduce, fragmentation, maintaining, data, reliability, in, the, face, of, a, computer, crash, or, hardware, failure, is, another, concern, file, writing, protocols, are, designed, with, atomic, operations, so, as, not, to, leave, permanent, storage, in, a, partially, written, inconsistent, state, in, the, event, of, a, crash, at, any, point, during, writing, data, corruption, is, addressed, by, redundant, storage, for, example, raid, redundant, array, of, inexpensive, disks, and, checksums, to, detect, when, data, has, been, corrupted, with, multiple, layers, of, checksums, and, backups, of, a, file, a, system, can, recover, from, multiple, hardware, failures, background, processes, are, often, used, to, detect, and, recover, from, data, corruption, security, means, protecting, users, from, other, users, of, the, same, computer, as, well, as, from, those, who, seeking, remote, access, to, it, over, a, network, operating, systems, security, rests, on, achieving, the, cia, triad, confidentiality, unauthorized, users, cannot, access, data, integrity, unauthorized, users, cannot, modify, data, and, availability, ensuring, that, the, system, remains, available, to, authorized, users, even, in, the, event, of, a, denial, of, service, attack, as, with, other, computer, systems, isolating, security, domains, in, the, case, of, operating, systems, the, kernel, processes, and, virtual, machines, is, key, to, achieving, security, other, ways, to, increase, security, include, simplicity, to, minimize, the, attack, surface, locking, access, to, resources, by, default, checking, all, requests, for, authorization, principle, of, least, authority, granting, the, minimum, privilege, essential, for, performing, a, task, privilege, separation, and, reducing, shared, data, some, operating, system, designs, are, more, secure, than, others, those, with, no, isolation, between, the, kernel, and, applications, are, least, secure, while, those, with, a, monolithic, kernel, like, most, general, purpose, operating, systems, are, still, vulnerable, if, any, part, of, the, kernel, is, compromised, a, more, secure, design, features, microkernels, that, separate, the, kernel, s, privileges, into, many, separate, security, domains, and, reduce, the, consequences, of, a, single, kernel, breach, unikernels, are, another, approach, that, improves, security, by, minimizing, the, kernel, and, separating, out, other, operating, systems, functionality, by, application, most, operating, systems, are, written, in, c, or, c, which, create, potential, vulnerabilities, for, exploitation, despite, attempts, to, protect, against, them, vulnerabilities, are, caused, by, buffer, overflow, attacks, which, are, enabled, by, the, lack, of, bounds, checking, hardware, vulnerabilities, some, of, them, caused, by, cpu, optimizations, can, also, be, used, to, compromise, the, operating, system, there, are, known, instances, of, operating, system, programmers, deliberately, implanting, vulnerabilities, such, as, back, doors, operating, systems, security, is, hampered, by, their, increasing, complexity, and, the, resulting, inevitability, of, bugs, because, formal, verification, of, operating, systems, may, not, be, feasible, developers, use, operating, system, hardening, to, reduce, vulnerabilities, e, g, address, space, layout, randomization, control, flow, integrity, access, restrictions, and, other, techniques, there, are, no, restrictions, on, who, can, contribute, code, to, open, source, operating, systems, such, operating, systems, have, transparent, change, histories, and, distributed, governance, structures, open, source, developers, strive, to, work, collaboratively, to, find, and, eliminate, security, vulnerabilities, using, code, review, and, type, checking, to, expunge, malicious, code, andrew, s, tanenbaum, advises, releasing, the, source, code, of, all, operating, systems, arguing, that, it, prevents, developers, from, placing, trust, in, secrecy, and, thus, relying, on, the, unreliable, practice, of, security, by, obscurity, a, user, interface, ui, is, essential, to, support, human, interaction, with, a, computer, the, two, most, common, user, interface, types, for, any, computer, are, for, personal, computers, including, smartphones, and, tablet, computers, and, for, workstations, user, input, is, typically, from, a, combination, of, keyboard, mouse, and, trackpad, or, touchscreen, all, of, which, are, connected, to, the, operating, system, with, specialized, software, personal, computer, users, who, are, not, software, developers, or, coders, often, prefer, guis, for, both, input, and, output, guis, are, supported, by, most, personal, computers, the, software, to, support, guis, is, more, complex, than, a, command, line, for, input, and, plain, text, output, plain, text, output, is, often, preferred, by, programmers, and, is, easy, to, support, a, hobby, operating, system, may, be, classified, as, one, whose, code, has, not, been, directly, derived, from, an, existing, operating, system, and, has, few, users, and, active, developers, in, some, cases, hobby, development, is, in, support, of, a, homebrew, computing, device, for, example, a, simple, single, board, computer, powered, by, a, 6502, microprocessor, or, development, may, be, for, an, architecture, already, in, widespread, use, operating, system, development, may, come, from, entirely, new, concepts, or, may, commence, by, modeling, an, existing, operating, system, in, either, case, the, hobbyist, is, her, his, own, developer, or, may, interact, with, a, small, and, sometimes, unstructured, group, of, individuals, who, have, like, interests, examples, of, hobby, operating, systems, include, syllable, and, templeos, if, an, application, is, written, for, use, on, a, specific, operating, system, and, is, ported, to, another, os, the, functionality, required, by, that, application, may, be, implemented, differently, by, that, os, the, names, of, functions, meaning, of, arguments, etc, requiring, the, application, to, be, adapted, changed, or, otherwise, maintained, this, cost, in, supporting, operating, systems, diversity, can, be, avoided, by, instead, writing, applications, against, software, platforms, such, as, java, or, qt, these, abstractions, have, already, borne, the, cost, of, adaptation, to, specific, operating, systems, and, their, system, libraries, another, approach, is, for, operating, system, vendors, to, adopt, standards, for, example, posix, and, os, abstraction, layers, provide, commonalities, that, reduce, porting, costs, in, the, personal, computer, market, as, of, september, 2023, microsoft, windows, has, the, highest, market, share, around, 68, macos, by, apple, inc, is, in, second, place, 20, and, the, varieties, of, linux, including, chromeos, are, collectively, in, third, place, 7, in, the, mobile, sector, including, smartphones, and, tablets, as, of, september, 2023, android, s, share, is, 68, 92, followed, by, apple, s, ios, and, ipados, with, 30, 42, and, other, operating, systems, with, 66, linux, is, a, free, software, distributed, under, the, gnu, general, public, license, gpl, which, means, that, all, of, its, derivatives, are, legally, required, to, release, their, source, code, linux, was, designed, by, programmers, for, their, own, use, thus, emphasizing, simplicity, and, consistency, with, a, small, number, of, basic, elements, that, can, be, combined, in, nearly, unlimited, ways, and, avoiding, redundancy, its, design, is, similar, to, other, unix, systems, not, using, a, microkernel, it, is, written, in, c, and, uses, unix, system, v, syntax, but, also, supports, bsd, syntax, linux, supports, standard, unix, networking, features, as, well, as, the, full, suite, of, unix, tools, while, supporting, multiple, users, and, employing, preemptive, multitasking, initially, of, a, minimalist, design, linux, is, a, flexible, system, that, can, work, in, under, 16, mb, of, ram, but, still, is, used, on, large, multiprocessor, systems, similar, to, other, unix, systems, linux, distributions, are, composed, of, a, kernel, system, libraries, and, system, utilities, linux, has, a, graphical, user, interface, gui, with, a, desktop, folder, and, file, icons, as, well, as, the, option, to, access, the, operating, system, via, a, command, line, android, is, a, partially, open, source, operating, system, closely, based, on, linux, and, has, become, the, most, widely, used, operating, system, by, users, due, to, its, popularity, on, smartphones, and, to, a, lesser, extent, embedded, systems, needing, a, gui, such, as, smart, watches, automotive, dashboards, airplane, seatbacks, medical, devices, and, home, appliances, unlike, linux, much, of, android, is, written, in, java, and, uses, object, oriented, design, windows, is, a, proprietary, operating, system, that, is, widely, used, on, desktop, computers, laptops, tablets, phones, workstations, enterprise, servers, and, xbox, consoles, the, operating, system, was, designed, for, security, reliability, compatibility, high, performance, extensibility, portability, and, international, support, later, on, energy, efficiency, and, support, for, dynamic, devices, also, became, priorities, windows, executive, works, via, kernel, mode, objects, for, important, data, structures, like, processes, threads, and, sections, memory, objects, for, example, files, the, operating, system, supports, demand, paging, of, virtual, memory, which, speeds, up, i, o, for, many, applications, i, o, device, drivers, use, the, windows, driver, model, the, ntfs, file, system, has, a, master, table, and, each, file, is, represented, as, a, record, with, metadata, the, scheduling, includes, preemptive, multitasking, windows, has, many, security, features, especially, important, are, the, use, of, access, control, lists, and, integrity, levels, every, process, has, an, authentication, token, and, each, object, is, given, a, security, descriptor, later, releases, have, added, even, more, security, features