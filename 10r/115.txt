https://en.wikipedia.org/wiki/Programming_paradigm
a, programming, paradigm, is, a, relatively, high, level, way, to, conceptualize, and, structure, the, implementation, of, a, computer, program, a, programming, language, can, be, classified, as, supporting, one, or, more, paradigms, paradigms, are, separated, along, and, described, by, different, dimensions, of, programming, some, paradigms, are, about, implications, of, the, execution, model, such, as, allowing, side, effects, or, whether, the, sequence, of, operations, is, defined, by, the, execution, model, other, paradigms, are, about, the, way, code, is, organized, such, as, grouping, into, units, that, include, both, state, and, behavior, yet, others, are, about, syntax, and, grammar, some, common, programming, paradigms, include, shown, in, hierarchical, relationship, programming, paradigms, come, from, computer, science, research, into, existing, practices, of, software, development, the, findings, allow, for, describing, and, comparing, programming, practices, and, the, languages, used, to, code, programs, for, perspective, other, research, studies, software, engineering, processes, and, describes, various, methodologies, to, describe, and, compare, them, a, programming, language, can, be, described, in, terms, of, paradigms, some, languages, support, only, one, paradigm, for, example, smalltalk, supports, object, oriented, and, haskell, supports, functional, most, languages, support, multiple, paradigms, for, example, a, program, written, in, c, object, pascal, or, php, can, be, purely, procedural, purely, object, oriented, or, can, contain, aspects, of, both, paradigms, or, others, when, using, a, language, that, supports, multiple, paradigms, the, developer, chooses, which, paradigm, elements, to, use, but, this, choice, may, not, involve, considering, paradigms, per, se, the, developer, often, uses, the, features, of, a, language, as, the, language, provides, them, and, to, the, extent, that, the, developer, knows, them, categorizing, the, resulting, code, by, paradigm, is, often, an, academic, activity, done, in, retrospect, languages, categorized, as, imperative, paradigm, have, two, main, features, they, state, the, order, in, which, operations, occur, with, constructs, that, explicitly, control, that, order, and, they, allow, side, effects, in, which, state, can, be, modified, at, one, point, in, time, within, one, unit, of, code, and, then, later, read, at, a, different, point, in, time, inside, a, different, unit, of, code, the, communication, between, the, units, of, code, is, not, explicit, in, contrast, languages, in, the, declarative, paradigm, do, not, state, the, order, in, which, to, execute, operations, instead, they, supply, a, number, of, available, operations, in, the, system, along, with, the, conditions, under, which, each, is, allowed, to, execute, the, implementation, of, the, language, s, execution, model, tracks, which, operations, are, free, to, execute, and, chooses, the, order, independently, more, at, comparison, of, multi, paradigm, programming, languages, in, object, oriented, programming, code, is, organized, into, objects, that, contain, state, that, is, owned, by, and, usually, controlled, by, the, code, of, the, object, most, object, oriented, languages, are, also, imperative, languages, in, object, oriented, programming, programs, are, treated, as, a, set, of, interacting, objects, in, functional, programming, programs, are, treated, as, a, sequence, of, stateless, function, evaluations, when, programming, computers, or, systems, with, many, processors, in, process, oriented, programming, programs, are, treated, as, sets, of, concurrent, processes, that, act, on, a, logical, shared, data, structures, many, programming, paradigms, are, as, well, known, for, the, techniques, they, forbid, as, for, those, they, support, for, instance, pure, functional, programming, disallows, side, effects, while, structured, programming, disallows, the, goto, construct, partly, for, this, reason, new, paradigms, are, often, regarded, as, doctrinaire, or, overly, rigid, by, those, accustomed, to, older, ones, yet, avoiding, certain, techniques, can, make, it, easier, to, understand, program, behavior, and, to, prove, theorems, about, program, correctness, programming, paradigms, can, also, be, compared, with, programming, models, which, allows, invoking, an, execution, model, by, using, only, an, api, programming, models, can, also, be, classified, into, paradigms, based, on, features, of, the, execution, model, for, parallel, computing, using, a, programming, model, instead, of, a, language, is, common, the, reason, is, that, details, of, the, parallel, hardware, leak, into, the, abstractions, used, to, program, the, hardware, this, causes, the, programmer, to, have, to, map, patterns, in, the, algorithm, onto, patterns, in, the, execution, model, which, have, been, inserted, due, to, leakage, of, hardware, into, the, abstraction, as, a, consequence, no, one, parallel, programming, language, maps, well, to, all, computation, problems, thus, it, is, more, convenient, to, use, a, base, sequential, language, and, insert, api, calls, to, parallel, execution, models, via, a, programming, model, such, parallel, programming, models, can, be, classified, according, to, abstractions, that, reflect, the, hardware, such, as, shared, memory, distributed, memory, with, message, passing, notions, of, place, visible, in, the, code, and, so, forth, these, can, be, considered, flavors, of, programming, paradigm, that, apply, to, only, parallel, languages, and, programming, models, some, programming, language, researchers, criticise, the, notion, of, paradigms, as, a, classification, of, programming, languages, e, g, harper, and, krishnamurthi, they, argue, that, many, programming, languages, cannot, be, strictly, classified, into, one, paradigm, but, rather, include, features, from, several, paradigms, see, comparison, of, multi, paradigm, programming, languages, different, approaches, to, programming, have, developed, over, time, classification, of, each, approach, was, either, described, at, the, time, the, approach, was, first, developed, but, often, not, until, some, time, later, retrospectively, an, early, approach, consciously, identified, as, such, is, structured, programming, advocated, since, the, mid, 1960s, the, concept, of, a, programming, paradigm, as, such, dates, at, least, to, 1978, in, the, turing, award, lecture, of, robert, w, floyd, entitled, the, paradigms, of, programming, which, cites, the, notion, of, paradigm, as, used, by, thomas, kuhn, in, his, the, structure, of, scientific, revolutions, 1962, early, programming, languages, did, not, have, clearly, defined, programming, paradigms, and, sometimes, programs, made, extensive, use, of, goto, statements, liberal, use, of, which, lead, to, spaghetti, code, which, is, difficult, to, understand, and, maintain, this, led, to, the, development, of, structured, programming, paradigms, that, disallowed, the, use, of, goto, statements, only, allowing, the, use, of, more, structured, programming, constructs, machine, code, is, the, lowest, level, of, computer, programming, as, it, is, machine, instructions, that, define, behavior, at, the, lowest, level, of, abstract, possible, for, a, computer, as, it, is, the, most, prescriptive, way, to, code, it, is, classified, as, imperative, it, is, sometimes, called, the, first, generation, programming, language, assembly, language, introduced, mnemonics, for, machine, instructions, and, memory, addresses, assembly, is, classified, as, imperative, and, is, sometimes, called, the, second, generation, programming, language, in, the, 1960s, assembly, languages, were, developed, to, support, library, copy, and, quite, sophisticated, conditional, macro, generation, and, preprocessing, abilities, call, to, subroutine, external, variables, and, common, sections, globals, enabling, significant, code, re, use, and, isolation, from, hardware, specifics, via, the, use, of, logical, operators, such, as, read, write, get, put, assembly, was, and, still, is, used, for, time, critical, systems, and, often, in, embedded, systems, as, it, gives, the, most, control, of, what, the, machine, does, procedural, languages, also, called, the, third, generation, programming, languages, are, the, first, described, as, high, level, languages, they, support, vocabulary, related, to, the, problem, being, solved, for, example, these, languages, are, classified, as, procedural, paradigm, they, directly, control, the, step, by, step, process, that, a, computer, program, follows, the, efficacy, and, efficiency, of, such, a, program, is, therefore, highly, dependent, on, the, programmer, s, skill, in, attempt, to, improve, on, procedural, languages, object, oriented, programming, oop, languages, were, created, such, as, simula, smalltalk, c, eiffel, python, php, java, and, c, in, these, languages, data, and, methods, to, manipulate, the, data, are, in, the, same, code, unit, called, an, object, this, encapsulation, ensures, that, the, only, way, that, an, object, can, access, data, is, via, methods, of, the, object, that, contains, the, data, thus, an, object, s, inner, workings, may, be, changed, without, affecting, code, that, uses, the, object, there, is, controversy, raised, by, alexander, stepanov, richard, stallman, and, other, programmers, concerning, the, efficacy, of, the, oop, paradigm, versus, the, procedural, paradigm, the, need, for, every, object, to, have, associative, methods, leads, some, skeptics, to, associate, oop, with, software, bloat, an, attempt, to, resolve, this, dilemma, came, through, polymorphism, although, most, oop, languages, are, third, generation, it, is, possible, to, create, an, object, oriented, assembler, language, high, level, assembly, hla, is, an, example, of, this, that, fully, supports, advanced, data, types, and, object, oriented, assembly, language, programming, despite, its, early, origins, thus, differing, programming, paradigms, can, be, seen, rather, like, motivational, memes, of, their, advocates, rather, than, necessarily, representing, progress, from, one, level, to, the, next, precise, comparisons, of, competing, paradigms, efficacy, are, frequently, made, more, difficult, because, of, new, and, differing, terminology, applied, to, similar, entities, and, processes, together, with, numerous, implementation, distinctions, across, languages, a, declarative, programming, program, describes, what, the, problem, is, not, how, to, solve, it, the, program, is, structured, as, a, set, of, properties, to, find, in, the, expected, result, not, as, a, procedure, to, follow, given, a, database, or, a, set, of, rules, the, computer, tries, to, find, a, solution, matching, all, the, desired, properties, an, archetype, of, a, declarative, language, is, the, fourth, generation, language, sql, and, the, family, of, functional, languages, and, logic, programming, functional, programming, is, a, subset, of, declarative, programming, programs, written, using, this, paradigm, use, functions, blocks, of, code, intended, to, behave, like, mathematical, functions, functional, languages, discourage, changes, in, the, value, of, variables, through, assignment, making, a, great, deal, of, use, of, recursion, instead, the, logic, programming, paradigm, views, computation, as, automated, reasoning, over, a, body, of, knowledge, facts, about, the, problem, domain, are, expressed, as, logic, formulas, and, programs, are, executed, by, applying, inference, rules, over, them, until, an, answer, to, the, problem, is, found, or, the, set, of, formulas, is, proved, inconsistent, symbolic, programming, is, a, paradigm, that, describes, programs, able, to, manipulate, formulas, and, program, components, as, data, programs, can, thus, effectively, modify, themselves, and, appear, to, learn, making, them, suited, for, applications, such, as, artificial, intelligence, expert, systems, natural, language, processing, and, computer, games, languages, that, support, this, paradigm, include, lisp, and, prolog, differentiable, programming, structures, programs, so, that, they, can, be, differentiated, throughout, usually, via, automatic, differentiation, literate, programming, as, a, form, of, imperative, programming, structures, programs, as, a, human, centered, web, as, in, a, hypertext, essay, documentation, is, integral, to, the, program, and, the, program, is, structured, following, the, logic, of, prose, exposition, rather, than, compiler, convenience, symbolic, techniques, such, as, reflection, which, allow, the, program, to, refer, to, itself, might, also, be, considered, as, a, programming, paradigm, however, this, is, compatible, with, the, major, paradigms, and, thus, is, not, a, real, paradigm, in, its, own, right