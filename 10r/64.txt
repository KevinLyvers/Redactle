https://en.wikipedia.org/wiki/Software
software, consists, of, computer, programs, that, instruct, the, execution, of, a, computer, software, can, be, defined, broadly, to, include, design, documents, specifications, and, testing, suites, the, history, of, software, is, closely, tied, to, the, development, of, digital, computers, in, the, mid, 20th, century, early, programs, were, written, in, machine, language, specific, to, the, hardware, but, the, introduction, of, high, level, programming, languages, in, the, 1950s, allowed, for, more, human, readable, instructions, making, software, development, easier, and, more, portable, across, systems, compilers, or, interpreters, were, developed, to, link, a, program, with, other, dependencies, and, convert, the, software, into, machine, code, that, can, be, executed, on, the, hardware, over, time, software, has, evolved, to, include, more, complex, systems, capable, of, running, on, various, platforms, owing, to, developments, in, networking, operating, systems, and, databases, software, can, generally, be, categorized, into, two, main, types, operating, systems, which, manage, hardware, resources, and, provide, services, for, applications, and, application, software, which, performs, specific, tasks, for, users, the, rise, of, cloud, computing, has, also, introduced, new, software, delivery, models, such, as, software, as, a, service, saas, in, which, applications, are, hosted, by, a, provider, and, accessed, over, the, internet, the, process, of, developing, and, maintaining, software, involves, several, stages, including, software, design, programming, testing, release, and, ongoing, updates, software, quality, assurance, and, security, are, critical, aspects, of, software, development, as, bugs, and, security, vulnerabilities, can, lead, to, system, failures, or, security, breaches, additionally, legal, issues, such, as, software, licenses, and, intellectual, property, rights, play, a, significant, role, in, the, distribution, and, use, of, software, products, the, first, use, of, the, word, software, is, credited, to, mathematician, john, wilder, tukey, in, 1958, the, first, programmable, computers, which, appeared, at, the, end, of, the, 1940s, were, programmed, in, machine, language, machine, language, is, difficult, to, debug, and, not, portable, across, different, computers, initially, hardware, resources, were, more, expensive, than, human, resources, as, programs, became, complex, programmer, productivity, became, the, bottleneck, the, introduction, of, high, level, programming, languages, in, 1958, hid, the, details, of, the, hardware, and, expressed, the, underlying, algorithms, into, the, code, early, languages, include, fortran, lisp, and, cobol, there, are, two, main, types, of, software, software, can, also, be, categorized, by, how, it, is, deployed, traditional, applications, are, purchased, with, a, perpetual, license, for, a, specific, version, of, the, software, downloaded, and, run, on, hardware, belonging, to, the, purchaser, the, rise, of, the, internet, and, cloud, computing, enabled, a, new, model, software, as, a, service, saas, in, which, the, provider, hosts, the, software, usually, built, on, top, of, rented, infrastructure, or, platforms, and, provides, the, use, of, the, software, to, customers, often, in, exchange, for, a, subscription, fee, by, 2023, saas, products, which, are, usually, delivered, via, a, web, application, had, become, the, primary, method, that, companies, deliver, applications, software, companies, aim, to, deliver, a, high, quality, product, on, time, and, under, budget, a, challenge, is, that, software, development, effort, estimation, is, often, inaccurate, software, development, begins, by, conceiving, the, project, evaluating, its, feasibility, analyzing, the, business, requirements, and, making, a, software, design, most, software, projects, speed, up, their, development, by, reusing, or, incorporating, existing, software, either, in, the, form, of, commercial, off, the, shelf, cots, or, open, source, software, software, quality, assurance, is, typically, a, combination, of, manual, code, review, by, other, engineers, and, automated, software, testing, due, to, time, constraints, testing, cannot, cover, all, aspects, of, the, software, s, intended, functionality, so, developers, often, focus, on, the, most, critical, functionality, formal, methods, are, used, in, some, safety, critical, systems, to, prove, the, correctness, of, code, while, user, acceptance, testing, helps, to, ensure, that, the, product, meets, customer, expectations, there, are, a, variety, of, software, development, methodologies, which, vary, from, completing, all, steps, in, order, to, concurrent, and, iterative, models, software, development, is, driven, by, requirements, taken, from, prospective, users, as, opposed, to, maintenance, which, is, driven, by, events, such, as, a, change, request, frequently, software, is, released, in, an, incomplete, state, when, the, development, team, runs, out, of, time, or, funding, despite, testing, and, quality, assurance, virtually, all, software, contains, bugs, where, the, system, does, not, work, as, intended, post, release, software, maintenance, is, necessary, to, remediate, these, bugs, when, they, are, found, and, keep, the, software, working, as, the, environment, changes, over, time, new, features, are, often, added, after, the, release, over, time, the, level, of, maintenance, becomes, increasingly, restricted, before, being, cut, off, entirely, when, the, product, is, withdrawn, from, the, market, as, software, ages, it, becomes, known, as, legacy, software, and, can, remain, in, use, for, decades, even, if, there, is, no, one, left, who, knows, how, to, fix, it, over, the, lifetime, of, the, product, software, maintenance, is, estimated, to, comprise, 75, percent, or, more, of, the, total, development, cost, completing, a, software, project, involves, various, forms, of, expertise, not, just, in, software, programmers, but, also, testing, documentation, writing, project, management, graphic, design, user, experience, user, support, marketing, and, fundraising, software, quality, is, defined, as, meeting, the, stated, requirements, as, well, as, customer, expectations, quality, is, an, overarching, term, that, can, refer, to, a, code, s, correct, and, efficient, behavior, its, reusability, and, portability, or, the, ease, of, modification, it, is, usually, more, cost, effective, to, build, quality, into, the, product, from, the, beginning, rather, than, try, to, add, it, later, in, the, development, process, higher, quality, code, will, reduce, lifetime, cost, to, both, suppliers, and, customers, as, it, is, more, reliable, and, easier, to, maintain, software, failures, in, safety, critical, systems, can, be, very, serious, including, death, by, some, estimates, the, cost, of, poor, quality, software, can, be, as, high, as, 20, to, 40, percent, of, sales, despite, developers, goal, of, delivering, a, product, that, works, entirely, as, intended, virtually, all, software, contains, bugs, the, rise, of, the, internet, also, greatly, increased, the, need, for, computer, security, as, it, enabled, malicious, actors, to, conduct, cyberattacks, remotely, if, a, bug, creates, a, security, risk, it, is, called, a, vulnerability, software, patches, are, often, released, to, fix, identified, vulnerabilities, but, those, that, remain, unknown, zero, days, as, well, as, those, that, have, not, been, patched, are, still, liable, for, exploitation, vulnerabilities, vary, in, their, ability, to, be, exploited, by, malicious, actors, and, the, actual, risk, is, dependent, on, the, nature, of, the, vulnerability, as, well, as, the, value, of, the, surrounding, system, although, some, vulnerabilities, can, only, be, used, for, denial, of, service, attacks, that, compromise, a, system, s, availability, others, allow, the, attacker, to, inject, and, run, their, own, code, called, malware, without, the, user, being, aware, of, it, to, thwart, cyberattacks, all, software, in, the, system, must, be, designed, to, withstand, and, recover, from, external, attack, despite, efforts, to, ensure, security, a, significant, fraction, of, computers, are, infected, with, malware, programming, languages, are, the, format, in, which, software, is, written, since, the, 1950s, thousands, of, different, programming, languages, have, been, invented, some, have, been, in, use, for, decades, while, others, have, fallen, into, disuse, some, definitions, classify, machine, code, the, exact, instructions, directly, implemented, by, the, hardware, and, assembly, language, a, more, human, readable, alternative, to, machine, code, whose, statements, can, be, translated, one, to, one, into, machine, code, as, programming, languages, programs, written, in, the, high, level, programming, languages, used, to, create, software, share, a, few, main, characteristics, knowledge, of, machine, code, is, not, necessary, to, write, them, they, can, be, ported, to, other, computer, systems, and, they, are, more, concise, and, human, readable, than, machine, code, they, must, be, both, human, readable, and, capable, of, being, translated, into, unambiguous, instructions, for, computer, hardware, the, invention, of, high, level, programming, languages, was, simultaneous, with, the, compilers, needed, to, translate, them, automatically, into, machine, code, most, programs, do, not, contain, all, the, resources, needed, to, run, them, and, rely, on, external, libraries, part, of, the, compiler, s, function, is, to, link, these, files, in, such, a, way, that, the, program, can, be, executed, by, the, hardware, once, compiled, the, program, can, be, saved, as, an, object, file, and, the, loader, part, of, the, operating, system, can, take, this, saved, file, and, execute, it, as, a, process, on, the, computer, hardware, some, programming, languages, use, an, interpreter, instead, of, a, compiler, an, interpreter, converts, the, program, into, machine, code, at, run, time, which, makes, them, 10, to, 100, times, slower, than, compiled, programming, languages, software, is, often, released, with, the, knowledge, that, it, is, incomplete, or, contains, bugs, purchasers, knowingly, buy, it, in, this, state, which, has, led, to, a, legal, regime, where, liability, for, software, products, is, significantly, curtailed, compared, to, other, products, source, code, is, protected, by, copyright, law, that, vests, the, owner, with, the, exclusive, right, to, copy, the, code, the, underlying, ideas, or, algorithms, are, not, protected, by, copyright, law, but, are, often, treated, as, a, trade, secret, and, concealed, by, such, methods, as, non, disclosure, agreements, software, copyright, has, been, recognized, since, the, mid, 1970s, and, is, vested, in, the, company, that, makes, the, software, not, the, employees, or, contractors, who, wrote, it, the, use, of, most, software, is, governed, by, an, agreement, software, license, between, the, copyright, holder, and, the, user, proprietary, software, is, usually, sold, under, a, restrictive, license, that, limits, copying, and, reuse, often, enforced, with, tools, such, as, digital, rights, management, drm, open, source, licenses, in, contrast, allow, free, use, and, redistribution, of, software, with, few, conditions, most, open, source, licenses, used, for, software, require, that, modifications, be, released, under, the, same, license, which, can, create, complications, when, open, source, software, is, reused, in, proprietary, projects, patents, give, an, inventor, an, exclusive, time, limited, license, for, a, novel, product, or, process, ideas, about, what, software, could, accomplish, are, not, protected, by, law, and, concrete, implementations, are, instead, covered, by, copyright, law, in, some, countries, a, requirement, for, the, claimed, invention, to, have, an, effect, on, the, physical, world, may, also, be, part, of, the, requirements, for, a, software, patent, to, be, held, valid, software, patents, have, been, historically, controversial, before, the, 1998, case, state, street, bank, trust, co, v, signature, financial, group, inc, software, patents, were, generally, not, recognized, in, the, united, states, in, that, case, the, supreme, court, decided, that, business, processes, could, be, patented, patent, applications, are, complex, and, costly, and, lawsuits, involving, patents, can, drive, up, the, cost, of, products, unlike, copyrights, patents, generally, only, apply, in, the, jurisdiction, where, they, were, issued, engineer, capers, jones, writes, that, computers, and, software, are, making, profound, changes, to, every, aspect, of, human, life, education, work, warfare, entertainment, medicine, law, and, everything, else, it, has, become, ubiquitous, in, everyday, life, in, developed, countries, in, many, cases, software, augments, the, functionality, of, existing, technologies, such, as, household, appliances, and, elevators, software, also, spawned, entirely, new, technologies, such, as, the, internet, video, games, mobile, phones, and, gps, new, methods, of, communication, including, email, forums, blogs, microblogging, wikis, and, social, media, were, enabled, by, the, internet, massive, amounts, of, knowledge, exceeding, any, paper, based, library, are, now, available, with, a, quick, web, search, most, creative, professionals, have, switched, to, software, based, tools, such, as, computer, aided, design, 3d, modeling, digital, image, editing, and, computer, animation, almost, every, complex, device, is, controlled, by, software