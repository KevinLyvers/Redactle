https://en.wikipedia.org/wiki/JavaScript
javascript, d, v, s, k, r, p, t, often, abbreviated, as, js, is, a, programming, language, and, core, technology, of, the, web, alongside, html, and, css, 99, of, websites, use, javascript, on, the, client, side, for, webpage, behavior, web, browsers, have, a, dedicated, javascript, engine, that, executes, the, client, code, these, engines, are, also, utilized, in, some, servers, and, a, variety, of, apps, the, most, popular, runtime, system, for, non, browser, usage, is, node, js, javascript, is, a, high, level, often, just, in, time, compiled, language, that, conforms, to, the, ecmascript, standard, it, has, dynamic, typing, prototype, based, object, orientation, and, first, class, functions, it, is, multi, paradigm, supporting, event, driven, functional, and, imperative, programming, styles, it, has, application, programming, interfaces, apis, for, working, with, text, dates, regular, expressions, standard, data, structures, and, the, document, object, model, dom, the, ecmascript, standard, does, not, include, any, input, output, i, o, such, as, networking, storage, or, graphics, facilities, in, practice, the, web, browser, or, other, runtime, system, provides, javascript, apis, for, i, o, although, java, and, javascript, are, similar, in, name, syntax, and, respective, standard, libraries, the, two, languages, are, distinct, and, differ, greatly, in, design, the, first, popular, web, browser, with, a, graphical, user, interface, mosaic, was, released, in, 1993, accessible, to, non, technical, people, it, played, a, prominent, role, in, the, rapid, growth, of, the, early, world, wide, web, the, lead, developers, of, mosaic, then, founded, the, netscape, corporation, which, released, a, more, polished, browser, netscape, navigator, in, 1994, this, quickly, became, the, most, used, during, these, formative, years, of, the, web, web, pages, could, only, be, static, lacking, the, capability, for, dynamic, behavior, after, the, page, was, loaded, in, the, browser, there, was, a, desire, in, the, flourishing, web, development, scene, to, remove, this, limitation, so, in, 1995, netscape, decided, to, add, a, programming, language, to, navigator, they, pursued, two, routes, to, achieve, this, collaborating, with, sun, microsystems, to, embed, the, java, language, while, also, hiring, brendan, eich, to, embed, the, scheme, language, the, goal, was, a, language, for, the, masses, to, help, nonprogrammers, create, dynamic, interactive, web, sites, netscape, management, soon, decided, that, the, best, option, was, for, eich, to, devise, a, new, language, with, syntax, similar, to, java, and, less, like, scheme, or, other, extant, scripting, languages, although, the, new, language, and, its, interpreter, implementation, were, called, livescript, when, first, shipped, as, part, of, a, navigator, beta, in, september, 1995, the, name, was, changed, to, javascript, for, the, official, release, in, december, the, choice, of, the, javascript, name, has, caused, confusion, implying, that, it, is, directly, related, to, java, at, the, time, the, dot, com, boom, had, begun, and, java, was, a, popular, new, language, so, eich, considered, the, javascript, name, a, marketing, ploy, by, netscape, microsoft, debuted, internet, explorer, in, 1995, leading, to, a, browser, war, with, netscape, on, the, javascript, front, microsoft, created, its, own, interpreter, called, jscript, microsoft, first, released, jscript, in, 1996, alongside, initial, support, for, css, and, extensions, to, html, each, of, these, implementations, was, noticeably, different, from, their, counterparts, in, netscape, navigator, these, differences, made, it, difficult, for, developers, to, make, their, websites, work, well, in, both, browsers, leading, to, widespread, use, of, best, viewed, in, netscape, and, best, viewed, in, internet, explorer, logos, for, several, years, brendan, eich, later, said, of, this, period, it, s, still, kind, of, a, sidekick, language, it, s, considered, slow, or, annoying, people, do, pop, ups, or, those, scrolling, messages, in, the, old, status, bar, at, the, bottom, of, your, old, browser, in, november, 1996, netscape, submitted, javascript, to, ecma, international, as, the, starting, point, for, a, standard, specification, that, all, browser, vendors, could, conform, to, this, led, to, the, official, release, of, the, first, ecmascript, language, specification, in, june, 1997, the, standards, process, continued, for, a, few, years, with, the, release, of, ecmascript, 2, in, june, 1998, and, ecmascript, 3, in, december, 1999, work, on, ecmascript, 4, began, in, 2000, however, the, effort, to, fully, standardize, the, language, was, undermined, by, microsoft, gaining, an, increasingly, dominant, position, in, the, browser, market, by, the, early, 2000s, internet, explorer, s, market, share, reached, 95, this, meant, that, jscript, became, the, de, facto, standard, for, client, side, scripting, on, the, web, microsoft, initially, participated, in, the, standards, process, and, implemented, some, proposals, in, its, jscript, language, but, eventually, it, stopped, collaborating, on, ecma, work, thus, ecmascript, 4, was, mothballed, during, the, period, of, internet, explorer, dominance, in, the, early, 2000s, client, side, scripting, was, stagnant, this, started, to, change, in, 2004, when, the, successor, of, netscape, mozilla, released, the, firefox, browser, firefox, was, well, received, by, many, taking, significant, market, share, from, internet, explorer, in, 2005, mozilla, joined, ecma, international, and, work, started, on, the, ecmascript, for, xml, e4x, standard, this, led, to, mozilla, working, jointly, with, macromedia, later, acquired, by, adobe, systems, who, were, implementing, e4x, in, their, actionscript, 3, language, which, was, based, on, an, ecmascript, 4, draft, the, goal, became, standardizing, actionscript, 3, as, the, new, ecmascript, 4, to, this, end, adobe, systems, released, the, tamarin, implementation, as, an, open, source, project, however, tamarin, and, actionscript, 3, were, too, different, from, established, client, side, scripting, and, without, cooperation, from, microsoft, ecmascript, 4, never, reached, fruition, meanwhile, very, important, developments, were, occurring, in, open, source, communities, not, affiliated, with, ecma, work, in, 2005, jesse, james, garrett, released, a, white, paper, in, which, he, coined, the, term, ajax, and, described, a, set, of, technologies, of, which, javascript, was, the, backbone, to, create, web, applications, where, data, can, be, loaded, in, the, background, avoiding, the, need, for, full, page, reloads, this, sparked, a, renaissance, period, of, javascript, spearheaded, by, open, source, libraries, and, the, communities, that, formed, around, them, many, new, libraries, were, created, including, jquery, prototype, dojo, toolkit, and, mootools, google, debuted, its, chrome, browser, in, 2008, with, the, v8, javascript, engine, that, was, faster, than, its, competition, the, key, innovation, was, just, in, time, compilation, jit, so, other, browser, vendors, needed, to, overhaul, their, engines, for, jit, in, july, 2008, these, disparate, parties, came, together, for, a, conference, in, oslo, this, led, to, the, eventual, agreement, in, early, 2009, to, combine, all, relevant, work, and, drive, the, language, forward, the, result, was, the, ecmascript, 5, standard, released, in, december, 2009, ambitious, work, on, the, language, continued, for, several, years, culminating, in, an, extensive, collection, of, additions, and, refinements, being, formalized, with, the, publication, of, ecmascript, 6, in, 2015, the, creation, of, node, js, in, 2009, by, ryan, dahl, sparked, a, significant, increase, in, the, usage, of, javascript, outside, of, web, browsers, node, combines, the, v8, engine, an, event, loop, and, i, o, apis, thereby, providing, a, stand, alone, javascript, runtime, system, as, of, 2018, node, had, been, used, by, millions, of, developers, and, npm, had, the, most, modules, of, any, package, manager, in, the, world, the, ecmascript, draft, specification, is, currently, maintained, openly, on, github, and, editions, are, produced, via, regular, annual, snapshots, potential, revisions, to, the, language, are, vetted, through, a, comprehensive, proposal, process, now, instead, of, edition, numbers, developers, check, the, status, of, upcoming, features, individually, the, current, javascript, ecosystem, has, many, libraries, and, frameworks, established, programming, practices, and, substantial, usage, of, javascript, outside, of, web, browsers, plus, with, the, rise, of, single, page, applications, and, other, javascript, heavy, websites, several, transpilers, have, been, created, to, aid, the, development, process, javascript, is, a, trademark, of, oracle, corporation, in, the, united, states, the, trademark, was, originally, issued, to, sun, microsystems, on, 6, may, 1997, and, was, transferred, to, oracle, when, they, acquired, sun, in, 2009, javascript, is, the, dominant, client, side, scripting, language, of, the, web, with, 99, of, all, websites, using, it, for, this, purpose, scripts, are, embedded, in, or, included, from, html, documents, and, interact, with, the, dom, all, major, web, browsers, have, a, built, in, javascript, engine, that, executes, the, code, on, the, user, s, device, over, 80, of, websites, use, a, third, party, javascript, library, or, web, framework, as, part, of, their, client, side, scripting, jquery, is, by, far, the, most, used, other, notable, ones, include, angular, bootstrap, lodash, modernizr, react, underscore, and, vue, multiple, options, can, be, used, in, conjunction, such, as, jquery, and, bootstrap, however, the, term, vanilla, js, was, coined, for, websites, not, using, any, libraries, or, frameworks, at, all, instead, relying, entirely, on, standard, javascript, functionality, the, use, of, javascript, has, expanded, beyond, its, web, browser, roots, javascript, engines, are, now, embedded, in, a, variety, of, other, software, systems, both, for, server, side, website, deployments, and, non, browser, applications, initial, attempts, at, promoting, server, side, javascript, usage, were, netscape, enterprise, server, and, microsoft, s, internet, information, services, but, they, were, small, niches, server, side, usage, eventually, started, to, grow, in, the, late, 2000s, with, the, creation, of, node, js, and, other, approaches, electron, cordova, react, native, and, other, application, frameworks, have, been, used, to, create, many, applications, with, behavior, implemented, in, javascript, other, non, browser, applications, include, adobe, acrobat, support, for, scripting, pdf, documents, and, gnome, shell, extensions, written, in, javascript, javascript, has, been, used, in, some, embedded, systems, usually, by, leveraging, node, js, a, javascript, engine, is, a, software, component, that, executes, javascript, code, the, first, javascript, engines, were, mere, interpreters, but, all, relevant, modern, engines, use, just, in, time, compilation, for, improved, performance, javascript, engines, are, typically, developed, by, web, browser, vendors, and, every, major, browser, has, one, in, a, browser, the, javascript, engine, runs, in, concert, with, the, rendering, engine, via, the, document, object, model, and, web, idl, bindings, however, the, use, of, javascript, engines, is, not, limited, to, browsers, for, example, the, v8, engine, is, a, core, component, of, the, node, js, runtime, system, a, javascript, engine, must, be, embedded, within, a, runtime, system, such, as, a, web, browser, or, a, standalone, system, to, enable, scripts, to, interact, with, the, broader, environment, the, runtime, system, includes, the, necessary, apis, for, input, output, operations, such, as, networking, storage, and, graphics, and, provides, the, ability, to, import, scripts, javascript, is, a, single, threaded, language, the, runtime, processes, messages, from, a, queue, one, at, a, time, and, it, calls, a, function, associated, with, each, new, message, creating, a, call, stack, frame, with, the, function, s, arguments, and, local, variables, the, call, stack, shrinks, and, grows, based, on, the, function, s, needs, when, the, call, stack, is, empty, upon, function, completion, javascript, proceeds, to, the, next, message, in, the, queue, this, is, called, the, event, loop, described, as, run, to, completion, because, each, message, is, fully, processed, before, the, next, message, is, considered, however, the, language, s, concurrency, model, describes, the, event, loop, as, non, blocking, program, i, o, is, performed, using, events, and, callback, functions, this, means, for, example, that, javascript, can, process, a, mouse, click, while, waiting, for, a, database, query, to, return, information, the, notable, standalone, runtimes, are, node, js, deno, and, bun, the, following, features, are, common, to, all, conforming, ecmascript, implementations, unless, explicitly, specified, otherwise, javascript, supports, much, of, the, structured, programming, syntax, from, c, e, g, if, statements, while, loops, switch, statements, do, while, loops, etc, one, partial, exception, is, scoping, originally, javascript, only, had, function, scoping, with, var, block, scoping, was, added, in, ecmascript, 2015, with, the, keywords, let, and, const, like, c, javascript, makes, a, distinction, between, expressions, and, statements, one, syntactic, difference, from, c, is, automatic, semicolon, insertion, which, allow, semicolons, which, terminate, statements, to, be, omitted, javascript, is, weakly, typed, which, means, certain, types, are, implicitly, cast, depending, on, the, operation, used, values, are, cast, to, strings, like, the, following, values, are, cast, to, numbers, by, casting, to, strings, and, then, casting, the, strings, to, numbers, these, processes, can, be, modified, by, defining, tostring, and, valueof, functions, on, the, prototype, for, string, and, number, casting, respectively, javascript, has, received, criticism, for, the, way, it, implements, these, conversions, as, the, complexity, of, the, rules, can, be, mistaken, for, inconsistency, for, example, when, adding, a, number, to, a, string, the, number, will, be, cast, to, a, string, before, performing, concatenation, but, when, subtracting, a, number, from, a, string, the, string, is, cast, to, a, number, before, performing, subtraction, often, also, mentioned, is, resulting, in, 0, number, this, is, misleading, the, is, interpreted, as, an, empty, code, block, instead, of, an, empty, object, and, the, empty, array, is, cast, to, a, number, by, the, remaining, unary, operator, if, the, expression, is, wrapped, in, parentheses, the, curly, brackets, are, interpreted, as, an, empty, object, and, the, result, of, the, expression, is, as, expected, javascript, is, dynamically, typed, like, most, other, scripting, languages, a, type, is, associated, with, a, value, rather, than, an, expression, for, example, a, variable, initially, bound, to, a, number, may, be, reassigned, to, a, string, javascript, supports, various, ways, to, test, the, type, of, objects, including, duck, typing, javascript, includes, an, eval, function, that, can, execute, statements, provided, as, strings, at, run, time, prototypal, inheritance, in, javascript, is, described, by, douglas, crockford, as, you, make, prototype, objects, and, then, make, new, instances, objects, are, mutable, in, javascript, so, we, can, augment, the, new, instances, giving, them, new, fields, and, methods, these, can, then, act, as, prototypes, for, even, newer, objects, we, don, t, need, classes, to, make, lots, of, similar, objects, objects, inherit, from, objects, what, could, be, more, object, oriented, than, that, in, javascript, an, object, is, an, associative, array, augmented, with, a, prototype, see, below, each, key, provides, the, name, for, an, object, property, and, there, are, two, syntactical, ways, to, specify, such, a, name, dot, notation, obj, x, 10, and, bracket, notation, obj, 10, a, property, may, be, added, rebound, or, deleted, at, run, time, most, properties, of, an, object, and, any, property, that, belongs, to, an, object, s, prototype, inheritance, chain, can, be, enumerated, using, a, for, in, loop, javascript, uses, prototypes, where, many, other, object, oriented, languages, use, classes, for, inheritance, it, is, possible, to, simulate, many, class, based, features, with, prototypes, in, javascript, functions, double, as, object, constructors, along, with, their, typical, role, prefixing, a, function, call, with, new, will, create, an, instance, of, a, prototype, inheriting, properties, and, methods, from, the, constructor, including, properties, from, the, object, prototype, ecmascript, 5, offers, the, object, create, method, allowing, explicit, creation, of, an, instance, without, automatically, inheriting, from, the, object, prototype, older, environments, can, assign, the, prototype, to, null, the, constructor, s, prototype, property, determines, the, object, used, for, the, new, object, s, internal, prototype, new, methods, can, be, added, by, modifying, the, prototype, of, the, function, used, as, a, constructor, javascript, s, built, in, constructors, such, as, array, or, object, also, have, prototypes, that, can, be, modified, while, it, is, possible, to, modify, the, object, prototype, it, is, generally, considered, bad, practice, because, most, objects, in, javascript, will, inherit, methods, and, properties, from, the, object, prototype, and, they, may, not, expect, the, prototype, to, be, modified, unlike, in, many, object, oriented, languages, in, javascript, there, is, no, distinction, between, a, function, definition, and, a, method, definition, rather, the, distinction, occurs, during, function, calling, when, a, function, is, called, as, a, method, of, an, object, the, function, s, local, this, keyword, is, bound, to, that, object, for, that, invocation, javascript, functions, are, first, class, a, function, is, considered, to, be, an, object, as, such, a, function, may, have, properties, and, methods, such, as, call, and, bind, a, nested, function, is, a, function, defined, within, another, function, it, is, created, each, time, the, outer, function, is, invoked, in, addition, each, nested, function, forms, a, lexical, closure, the, lexical, scope, of, the, outer, function, including, any, constant, local, variable, or, argument, value, becomes, part, of, the, internal, state, of, each, inner, function, object, even, after, execution, of, the, outer, function, concludes, javascript, also, supports, anonymous, functions, javascript, supports, implicit, and, explicit, delegation, javascript, natively, supports, various, function, based, implementations, of, role, patterns, like, traits, and, mixins, such, a, function, defines, additional, behavior, by, at, least, one, method, bound, to, the, this, keyword, within, its, function, body, a, role, then, has, to, be, delegated, explicitly, via, call, or, apply, to, objects, that, need, to, feature, additional, behavior, that, is, not, shared, via, the, prototype, chain, whereas, explicit, function, based, delegation, does, cover, composition, in, javascript, implicit, delegation, already, happens, every, time, the, prototype, chain, is, walked, in, order, to, e, g, find, a, method, that, might, be, related, to, but, is, not, directly, owned, by, an, object, once, the, method, is, found, it, gets, called, within, this, object, s, context, thus, inheritance, in, javascript, is, covered, by, a, delegation, automatism, that, is, bound, to, the, prototype, property, of, constructor, functions, javascript, is, a, zero, index, language, an, indefinite, number, of, parameters, can, be, passed, to, a, function, the, function, can, access, them, through, formal, parameters, and, also, through, the, local, arguments, object, variadic, functions, can, also, be, created, by, using, the, bind, method, like, in, many, scripting, languages, arrays, and, objects, associative, arrays, in, other, languages, can, each, be, created, with, a, succinct, shortcut, syntax, in, fact, these, literals, form, the, basis, of, the, json, data, format, in, a, manner, similar, to, perl, javascript, also, supports, regular, expressions, which, provide, a, concise, and, powerful, syntax, for, text, manipulation, that, is, more, sophisticated, than, the, built, in, string, functions, javascript, supports, promises, and, async, await, for, handling, asynchronous, operations, a, built, in, promise, object, provides, functionality, for, handling, promises, and, associating, handlers, with, an, asynchronous, action, s, eventual, result, recently, the, javascript, specification, introduced, combinator, methods, which, allow, developers, to, combine, multiple, javascript, promises, and, do, operations, based, on, different, scenarios, the, methods, introduced, are, promise, race, promise, all, promise, allsettled, and, promise, any, async, await, allows, an, asynchronous, non, blocking, function, to, be, structured, in, a, way, similar, to, an, ordinary, synchronous, function, asynchronous, non, blocking, code, can, be, written, with, minimal, overhead, structured, similarly, to, traditional, synchronous, blocking, code, historically, some, javascript, engines, supported, these, non, standard, features, variables, in, javascript, can, be, defined, using, either, the, var, let, or, const, keywords, variables, defined, without, keywords, will, be, defined, at, the, global, scope, note, the, comments, in, the, examples, above, all, of, which, were, preceded, with, two, forward, slashes, there, is, no, built, in, input, output, functionality, in, javascript, instead, it, is, provided, by, the, run, time, environment, the, ecmascript, specification, in, edition, 5, 1, mentions, that, there, are, no, provisions, in, this, specification, for, input, of, external, data, or, output, of, computed, results, however, most, runtime, environments, have, a, console, object, that, can, be, used, to, print, output, here, is, a, minimalist, hello, world, program, in, javascript, in, a, runtime, environment, with, a, console, object, in, html, documents, a, program, like, this, is, required, for, an, output, a, simple, recursive, function, to, calculate, the, factorial, of, a, natural, number, an, anonymous, function, or, lambda, this, example, shows, that, in, javascript, function, closures, capture, their, non, local, variables, by, reference, arrow, functions, were, first, introduced, in, 6th, edition, ecmascript, 2015, they, shorten, the, syntax, for, writing, functions, in, javascript, arrow, functions, are, anonymous, so, a, variable, is, needed, to, refer, to, them, in, order, to, invoke, them, after, their, creation, unless, surrounded, by, parenthesis, and, executed, immediately, example, of, arrow, function, in, javascript, objects, can, be, created, as, instances, of, a, class, object, class, example, in, javascript, objects, can, be, instantiated, directly, from, a, function, object, functional, example, variadic, function, demonstration, arguments, is, a, special, variable, immediately, invoked, function, expressions, are, often, used, to, create, closures, closures, allow, gathering, properties, and, methods, in, a, namespace, and, making, some, of, them, private, generator, objects, in, the, form, of, generator, functions, provide, a, function, which, can, be, called, exited, and, re, entered, while, maintaining, internal, context, statefulness, javascript, can, export, and, import, from, modules, export, example, import, example, this, sample, code, displays, various, javascript, features, the, following, output, should, be, displayed, in, the, browser, window, javascript, and, the, dom, provide, the, potential, for, malicious, authors, to, deliver, scripts, to, run, on, a, client, computer, via, the, web, browser, authors, minimize, this, risk, using, two, restrictions, first, scripts, run, in, a, sandbox, in, which, they, can, only, perform, web, related, actions, not, general, purpose, programming, tasks, like, creating, files, second, scripts, are, constrained, by, the, same, origin, policy, scripts, from, one, website, do, not, have, access, to, information, such, as, usernames, passwords, or, cookies, sent, to, another, site, most, javascript, related, security, bugs, are, breaches, of, either, the, same, origin, policy, or, the, sandbox, there, are, subsets, of, general, javascript, adsafe, secure, ecmascript, ses, that, provide, greater, levels, of, security, especially, on, code, created, by, third, parties, such, as, advertisements, closure, toolkit, is, another, project, for, safe, embedding, and, isolation, of, third, party, javascript, and, html, content, security, policy, is, the, main, intended, method, of, ensuring, that, only, trusted, code, is, executed, on, a, web, page, a, common, javascript, related, security, problem, is, cross, site, scripting, xss, a, violation, of, the, same, origin, policy, xss, vulnerabilities, occur, when, an, attacker, can, cause, a, target, website, such, as, an, online, banking, website, to, include, a, malicious, script, in, the, webpage, presented, to, a, victim, the, script, in, this, example, can, then, access, the, banking, application, with, the, privileges, of, the, victim, potentially, disclosing, secret, information, or, transferring, money, without, the, victim, s, authorization, one, important, solution, to, xss, vulnerabilities, is, html, sanitization, some, browsers, include, partial, protection, against, reflected, xss, attacks, in, which, the, attacker, provides, a, url, including, malicious, script, however, even, users, of, those, browsers, are, vulnerable, to, other, xss, attacks, such, as, those, where, the, malicious, code, is, stored, in, a, database, only, correct, design, of, web, applications, on, the, server, side, can, fully, prevent, xss, xss, vulnerabilities, can, also, occur, because, of, implementation, mistakes, by, browser, authors, another, cross, site, vulnerability, is, cross, site, request, forgery, csrf, in, csrf, code, on, an, attacker, s, site, tricks, the, victim, s, browser, into, taking, actions, the, user, did, not, intend, at, a, target, site, like, transferring, money, at, a, bank, when, target, sites, rely, solely, on, cookies, for, request, authentication, requests, originating, from, code, on, the, attacker, s, site, can, carry, the, same, valid, login, credentials, of, the, initiating, user, in, general, the, solution, to, csrf, is, to, require, an, authentication, value, in, a, hidden, form, field, and, not, only, in, the, cookies, to, authenticate, any, request, that, might, have, lasting, effects, checking, the, http, referrer, header, can, also, help, javascript, hijacking, is, a, type, of, csrf, attack, in, which, a, script, tag, on, an, attacker, s, site, exploits, a, page, on, the, victim, s, site, that, returns, private, information, such, as, json, or, javascript, possible, solutions, include, developers, of, client, server, applications, must, recognize, that, untrusted, clients, may, be, under, the, control, of, attackers, the, application, author, cannot, assume, that, their, javascript, code, will, run, as, intended, or, at, all, because, any, secret, embedded, in, the, code, could, be, extracted, by, a, determined, adversary, some, implications, are, package, management, systems, such, as, npm, and, bower, are, popular, with, javascript, developers, such, systems, allow, a, developer, to, easily, manage, their, program, s, dependencies, upon, other, developers, program, libraries, developers, trust, that, the, maintainers, of, the, libraries, will, keep, them, secure, and, up, to, date, but, that, is, not, always, the, case, a, vulnerability, has, emerged, because, of, this, blind, trust, relied, upon, libraries, can, have, new, releases, that, cause, bugs, or, vulnerabilities, to, appear, in, all, programs, that, rely, upon, the, libraries, inversely, a, library, can, go, unpatched, with, known, vulnerabilities, out, in, the, wild, in, a, study, done, looking, over, a, sample, of, 133, 000, websites, researchers, found, 37, of, the, websites, included, a, library, with, at, least, one, known, vulnerability, the, median, lag, between, the, oldest, library, version, used, on, each, website, and, the, newest, available, version, of, that, library, is, 1, 177, days, in, alexa, and, development, of, some, libraries, still, in, active, use, ceased, years, ago, another, possibility, is, that, the, maintainer, of, a, library, may, remove, the, library, entirely, this, occurred, in, march, 2016, when, azer, ko, ulu, removed, his, repository, from, npm, this, caused, tens, of, thousands, of, programs, and, websites, depending, upon, his, libraries, to, break, javascript, provides, an, interface, to, a, wide, range, of, browser, capabilities, some, of, which, may, have, flaws, such, as, buffer, overflows, these, flaws, can, allow, attackers, to, write, scripts, that, would, run, any, code, they, wish, on, the, user, s, system, this, code, is, not, by, any, means, limited, to, another, javascript, application, for, example, a, buffer, overrun, exploit, can, allow, an, attacker, to, gain, access, to, the, operating, system, s, api, with, superuser, privileges, these, flaws, have, affected, major, browsers, including, firefox, internet, explorer, and, safari, plugins, such, as, video, players, adobe, flash, and, the, wide, range, of, activex, controls, enabled, by, default, in, microsoft, internet, explorer, may, also, have, flaws, exploitable, via, javascript, such, flaws, have, been, exploited, in, the, past, in, windows, vista, microsoft, has, attempted, to, contain, the, risks, of, bugs, such, as, buffer, overflows, by, running, the, internet, explorer, process, with, limited, privileges, google, chrome, similarly, confines, its, page, renderers, to, their, own, sandbox, web, browsers, are, capable, of, running, javascript, outside, the, sandbox, with, the, privileges, necessary, to, for, example, create, or, delete, files, such, privileges, are, not, intended, to, be, granted, to, code, from, the, web, incorrectly, granting, privileges, to, javascript, from, the, web, has, played, a, role, in, vulnerabilities, in, both, internet, explorer, and, firefox, in, windows, xp, service, pack, 2, microsoft, demoted, jscript, s, privileges, in, internet, explorer, microsoft, windows, allows, javascript, source, files, on, a, computer, s, hard, drive, to, be, launched, as, general, purpose, non, sandboxed, programs, see, windows, script, host, this, makes, javascript, like, vbscript, a, theoretically, viable, vector, for, a, trojan, horse, although, javascript, trojan, horses, are, uncommon, in, practice, in, 2015, a, javascript, based, proof, of, concept, implementation, of, a, rowhammer, attack, was, described, in, a, paper, by, security, researchers, in, 2017, a, javascript, based, attack, via, browser, was, demonstrated, that, could, bypass, aslr, it, is, called, aslr, cache, or, anc, in, 2018, the, paper, that, announced, the, spectre, attacks, against, speculative, execution, in, intel, and, other, processors, included, a, javascript, implementation, important, tools, have, evolved, with, the, language, a, common, misconception, is, that, javascript, is, directly, related, to, java, both, indeed, have, a, c, like, syntax, the, c, language, being, their, most, immediate, common, ancestor, language, they, are, also, typically, sandboxed, and, javascript, was, designed, with, java, s, syntax, and, standard, library, in, mind, in, particular, all, java, keywords, were, reserved, in, original, javascript, javascript, s, standard, library, follows, java, s, naming, conventions, and, javascript, s, math, and, date, objects, are, based, on, classes, from, java, 1, 0, both, languages, first, appeared, in, 1995, but, java, was, developed, by, james, gosling, of, sun, microsystems, and, javascript, by, brendan, eich, of, netscape, communications, the, differences, between, the, two, languages, are, more, prominent, than, their, similarities, java, has, static, typing, while, javascript, s, typing, is, dynamic, java, is, loaded, from, compiled, bytecode, while, javascript, is, loaded, as, human, readable, source, code, java, s, objects, are, class, based, while, javascript, s, are, prototype, based, finally, java, did, not, support, functional, programming, until, java, 8, while, javascript, has, done, so, from, the, beginning, being, influenced, by, scheme, json, is, a, data, format, derived, from, javascript, hence, the, name, javascript, object, notation, it, is, a, widely, used, format, supported, by, many, other, programming, languages, many, websites, are, javascript, heavy, so, transpilers, have, been, created, to, convert, code, written, in, other, languages, which, can, aid, the, development, process, typescript, and, coffeescript, are, two, notable, languages, that, transpile, to, javascript, webassembly, is, a, newer, language, with, a, bytecode, format, designed, to, complement, javascript, especially, the, performance, critical, portions, of, web, page, scripts, all, of, the, major, javascript, engines, support, webassembly, which, runs, in, the, same, sandbox, as, regular, javascript, code, asm, js, is, a, subset, of, javascript, that, served, as, the, forerunner, of, webassembly